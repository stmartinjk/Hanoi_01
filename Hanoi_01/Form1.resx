<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAeAJkDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9/KKK8I/ab8E2ukz+Lvij438S+MdP8EfDvwzLqFvpOh+Kb/Ro
        H+zJLd3d5cG0khaViixxKkjOirC5x+9OAD3eiviT9gD9lzxj4p/YR+BnjDxN49+KNx8UtRh0bxZrNze+
        OtXlt5Ip7qK9uLGa0kuHt3QWjtbbTETlQS24s9es/Aj4mWHxE8afFz4r65eKuh+CdY1LwjpDfM6aXYaX
        tTUpdilv3sl/Dc7yqgtHa2y4OzJAPoKivD9K/wCCg3w+1bwpda2ra5FpWj+Jx4N1y5ksD5fh/V21BdNW
        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
</value>
  </data>
</root>